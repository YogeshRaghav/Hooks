Q1. Remove Duplicates

let arr = [1,1,2,3,3,4,5,6,6]
let uniqueArray = [] 
for(let i = 1; i<arr.length; i++){
    if(!uniqueArray.includes(arr[i])){
        uniqueArray.push(arr[i])
    }
}
console.log(uniqueArray)	

OR

function removeRepeatedNumber(arr) {
    return arr.filter((item, index) => arr.indexOf(item) === index);
}

let arr = [1, 1, 2, 3, 4];
console.log(removeRepeatedNumber(arr))

Q2. Capitalise first letter.

function capital(str) {
    return str.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ')
}

console.log(capital('hi how are you'))

Q3.MAXIMUM VALUE

function largest (arr){
    let largest = []
    for(i=0; i<arr.length; i++){
        if(arr[i] > largest){
            largest = arr[i]
        }
    }
    return largest
}

let arr = [22,3,41,4]
console.log(largest(arr))

Q4. Reverse Each Word in a string?

Ans. function reverseString(str){
    let newArray = str.split(' ')
    for(let i = 0; i<newArray.length; i++){
        newArray[i] = newArray[i].split('').reverse().join('')
    }
    let newStr  = newArray.join(' ')
    return newStr
    }

    let str = 'hai'
    console.log(reverseString(str))

Q5. Calculate occurrences of words

function occurence(str) {
    let exists = {}
    for(let i = 0; i<str.length; i++){
        if(exists[str[i]]){
            exists[str[i]] += 1
        }
        else{
        exists[str[i]] = 1
    }
    }
 
   for (let item in exists){
        console.log("occurence of " + item + ':' + exists[item])
    }
}

occurence('nitin')

Q6. Move 0s to the right

function ab(arr){
    let nonZero = 0;
    
    for(let i=0; i<arr.length; i++){
        if(arr[i] !== 0){
            arr[nonZero] = arr[i]
            nonZero++
        }
    }
    
    for(let i = nonZero; i<arr.length; i++){
        arr[i] = 0
    }
    
    return arr
}

let arr = [1,2,0,4,0]
console.log(ab(arr))



Q7. Remove Repeated Words in String

function a(str){
   
    let newStr = new Set()
    let chars = ''
    
   for(let word of str){
       if(!newStr.has(word)){
           newStr.add(word)
           chars += word
       }
       	
   }
    return chars;
}

let str = 'kamal'
console.log(a(str))

Q8. Reverse Number

let arr = [1,2,3,4,5]

function reverse(arr){
    
    let newArr = []
    
    for(let i = arr.length-1; i>=0; i--){
        newArr.push(arr[i])
    }
    
    return newArr
}

console.log(reverse(arr))

Q9. Check Anagram

function anagram(a,b){
    
   a = a.toLowerCase()
   b = b.toLowerCase()
  
  let c = a.split('').sort().join('')
  let d = b.split('').sort().join('')
  
  return c===d
  
}

console.log(anagram('silent','listen'))

Q10. Find Factorial

function factorial(num){
    
    if(num === 0 || num === 1){
        return 1
    }
    return num * factorial(num-1)
}

console.log(factorial(4))

Q11. Check Vowels

function checkVowels(str) {
    str = str.toLowerCase()
    
    let vowels = 'aeiou'
    
    let count = 0
    
    for(let word of str){
        if(vowels.includes(word)){
            count++
        }
    }
    
    return count
}

console.log(checkVowels('hello'))

Q12. 45: Write a Program to Convert Digits to Words.

function convertToWord(str){
    
    let digitWords = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']
    
    let digiStr = str.toString()
    
    let wordArray = []
    
    for(let word of digiStr){
        
        let num = parseInt(word)
        
        wordArray.push(digitWords[num])
    }
    
    return wordArray.join( ' ')
}

let str = 2607

console.log(convertToWord(str))

Q13. Find Smallest Element in an Array.

function findSmallestElement(arr) {
    
    let arr1 = arr[0]
    
    for( let i = 0; i< arr.length; i++){
        if(arr[i] < arr1){
            arr1 = arr[i]
        }
    }
    return arr1
}

let arr = [1,44,32,554,543]

console.log(findSmallestElement(arr))

Q14. find Product of an Array input = [1,2,3,4,5] output = [120,60,40,30,24]

function findProduct(arr){
    
    let arr1 = []
    
    for(let i = 0; i<arr.length; i++){ 
        
        let product = 1;
        for(let j = 0; j<arr.length; j++){
            if(i !==j){
                product *= arr[j]
            }
        }
     arr1.push(product)
    }
    return arr1
   
    
}

let arr = [1,2,3,4,5]

console.log(findProduct(arr))

Q.15 Frequency of number

var topKFrequent = function(nums, k) {
    let num = {}

    for(let i = 0; i < nums.length; i++){
        if(num[nums[i]]){
            num[nums[i]] += 1
        } 
        else{
            num[nums[i]] = 1
        }
    }

    let sorted = Object.keys(num).sort((a,b) => num[b]-num[a]).slice(0,k)
    return sorted
};

let nums = [1,1,1,2,2,3]
let k = 2

topKFrequent(nums,k)

Q16 find target

function findTarget(arr,target){
    let left = 0;
    let right = arr.length-1;
    
    while(left < right){
        const sum = arr[left] + arr[right]
        
        if(sum === target ){
            return [arr[left],arr[right]]
        }
        else if(sum < target){
            left++
        }
        else{
            right--
        }
    }
    return null
}

const arr = [1,2,3,4,5,6]
const target = 8

console.log(findTarget(arr,target))

Q17. Count Negative Numbers

let grid = [[4,3,2,-1],[3,2,1,-1],[1,1,-1,-2],[-1,-1,-2,-3]]

function countNegativeNumbers(grid){
    let ans = 0
    let n = grid.length
    let m = grid[0].length
    
    for(let r = 0; r< n; r++){
        for(let c = 0; c< m; c++){
            if(grid[r][c] < 0){
                ans++
            }
        }
        
    }
    return ans
}

console.log(countNegativeNumbers(grid))

Q18 Count how many number are shorter in array 

Ans function find(nums){
    let num = nums.slice().sort((a,b) => a-b)
    let mapping = {}
    let result = []
    
    for(let i = 0; i < num.length; i++){
        if(!mapping[num[i]])
        mapping[num[i]] = i
    }
    
    for(let i = 0; i<nums.length; i++){
        result.push(mapping[nums[i]])
    }
    
    return result
}

let nums = [8,1,2,2,3]
console.log(find(nums))

Q19 Valid Parenthesis
Ans 
var isValid = function(s) {
    
    let output = []

    for (let i=0; i<s.length; i++){
        let char = s[i]
        if(char === '(' || char === '{' || char === '['){
            output.push(char)
        }
        else if(char === ')' || char === '}' || char === ']'){
            

            if(output.length === 0){
                return false
            }
            let last = output.pop()

            if((char === ')' && last !== '(' || char === ']' && last !== '[' || char === '}' && last !== '{')){
                return false
            }
        }
   
    } 

    return output.length === 0 
};

Q20 Give duplicates number
let a = [1,2,2,3,3,4]

function ab(a){
    let duplicates = new Set()
    for(i=0; i<a.length;i++){
        for(j=i+1;j<a.length;j++){
            if (a[i] == a[j]){
                duplicates.add(a[i]) 
            }
        }
    }
    
    return [...duplicates]
}

console.log(ab(a))

Q21 Move zero to left

Ans let arr = [1,0,0,1,0,1,1]

function a(arr){
    let i = 0
    let j = 0
    
    while(j<arr.length){
        if(arr[j] === 0){
            [arr[i],arr[j]] = [arr[j],arr[i]]
            i++
        }
        j++
    }
    return arr
}

console.log(a(arr))

Q22. Find Comibination sum
Ans . let arr = [3,2,5,7,1]
let target = 6

function comb(arr,target){
    let result = []
    
    function backtrack(remaining,start,path){
        if(remaining === 0){
            result.push([...path])
            return result
        }
        
        if(remaining < 0){
            return
        }
        
        for(let i = start; i < arr.length; i++){
            path.push(arr[i])
            backtrack(remaining - arr[i], i, path)
            path.pop()
        }
    }
    
    backtrack(target,0,[])
    return result
}

console.log(comb(arr,target))

Q23. Longes substring without repeating character
Ans. let s = 'abcdabcbb'

function a(s){
    let maxLen = 0
    let charSet = new Set()
    let left = 0
    
    for(let right = 0; right < s.length; right++){
        while(charSet.has(s[right])){
            charSet.delete(s[left])
            left++
        }
        
        charSet.add(s[right])
        maxLen = Math.max(maxLen, right - left + 1)
    }
    return maxLen
}

console.log(a(s))

Q22. Check Prime Numbers
Ans. function isPrime(num){
    if(num <= 1){
        return false
    }
    
    for(let i = 2; i <= Math.sqrt(num); i++){
        if(num % i == 0 ){
            return false
        }
    }
    return true
}

for(let i = 0; i <= 100; i++){
    if(isPrime(i)){
        console.log(i)
    }
}

Q23. Print Fizz Buzz
Ans for(let i = 0; i <= 100; i++){
    if(i % 15 === 0){
        console.log("FizzBuzz")
    }
    else if(i % 3 === 0){
        console.log('Fizz')
    }
    else if(i % 5 === 0){
        console.log('Buzz')
    }
    else{
        console.log(i)
    }
}

Q24. Calculate the no added to complete the consecutive array.
Ans. function a(arr){
    let m = 0
    
    for(let i = 1; i<arr.length; i++){
        const diff = arr[i] - arr[i-1]
        if(diff >= 1){
            m += (diff - 1)
        }
    }
    return m
}

let arr = [5,10,15]
console.log(a(arr))

Q25 Password Generator
Ans const psGenerator = (length) => {
    
    const chars = 'abcdefghijklmnopqrstuvwxyz!@#$%^&*()_?'
    let password = ''
    
    for(let i = 0; i < length; i++){
        let randomIndex = Math.floor(Math.random() * chars.length)
        password += chars[randomIndex]
    }
    
    return password
}

const password = psGenerator(12)
console.log(password)

Q26. Sliding window approach?
let arr = [1,3,-1,-3,5,3,6,7]
let k = 3

function a(arr,k){
    let result = []
    
    for(let i = 0; i <= arr.length-k; i++){
        let max = arr[i]
        for(let j = 1; j < k; j++){
            if(arr[i + j] > max){
                max = arr[i+j]
            }
            
        }
        result.push(max)
    }
    return result
}

console.log(a(arr,k))